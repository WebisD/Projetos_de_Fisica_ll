#:import analiseEnergy analisaEntrada.getInputEnergy
#:import analiseComp analisaEntrada.getInputComp
#:import analisePhoton analisaEntrada.getInputPhoton

WindowManager:
    MainWindow:
    EnergyWindow:
    WaveLengthWindow:
    AbsorberPhoton:

<MainWindow>:
    name: "main"

    Button:
        text: "Calcular energias do átomo de hidrogênio"
        background_color: 1, 0, 0, 1
        pos_hint: {"x":0.25, "y":0.7}
        size_hint: 0.5,0.2
        on_release:
            app.root.current = "energy"
            root.manager.transition.direction = "left"

    Button:
        text: "Comprimento de onda emitido pelo átomo"
        background_color: 0, 1, 0, 1
        pos_hint: {"x":0.25, "y":0.4}
        size_hint: 0.5,0.2
        on_release:
            app.root.current = "waveLength"
            root.manager.transition.direction = "right"

    Button:
        text: "Verificar se fóton pode ou não ser absorvido pelo átomo"
        background_color: 0, 0, 1, 1
        pos_hint: {"x":0.25, "y":0.1}
        size_hint: 0.5,0.2
        on_release:
            app.root.current = "absorberPhoton"
            root.manager.transition.direction = "up"

<EnergyWindow>:
    name: "energy"

    Label:
        text: "Entre com o valor do número quântico (n) do átomo de hidrogênio:"
        size_hint: 0.6, 0.2
        pos_hint: {"x":0.2, "top":1}

    TextInput:
        id: n
        multiline: False
        hint_text: "Entre (n)"
        size_hint: 0.3,0.07
        pos_hint: {"x":0.35, "y":0.75}

    Button:
        text: "Confirmar"
        pos_hint: {"x":0.35, "y":0.6}
        size_hint: 0.3,0.1
        on_release:
            info = analiseEnergy(n.text)
            root.show_answer(info[0], info[1])
            n.text = ""

    Button:
        text: "Menu Inicial"
        pos_hint: {"x":0.0, "y":0.0}
        size_hint: 0.3,0.1
        on_release:
            app.root.current = "main"
            root.manager.transition.direction = "right"

<WaveLengthWindow>:
    name:"waveLength"

    Label:
        text: "Escolha uma das séries:"
        size_hint: 0.6, 0.2
        pos_hint: {"x":0.2, "top":1}

    Spinner:
        id: spinner_id

        text: "Série de Lyman"

        values: ["Série de Lyman", "Série de Balmer", "Série de Paschen", "Série de Brackett", "Série de Pfund", "Transição de Ni para Nf"]

        size_hint: None, None
        size: 200, 50
        pos_hint:{'center_x':.5, 'top': 0.85}


    Button:
        text: "Confirmar"
        pos_hint: {"x":0.35, "y":0.17}
        size_hint: 0.3,0.1
        on_release:
            option = 2 if spinner_id.text == "Transição de Ni para Nf" else 1
            root.chosenSerie(spinner_id.text, option)

    Button:
        text: "Menu Inicial"
        pos_hint: {"x":0.7, "y":0.0}
        size_hint: 0.3,0.1
        on_release:
            app.root.current = "main"
            root.manager.transition.direction = "left"

<AbsorberPhoton>:
    name: "absorberPhoton"

    Label:
        text: "\n\n\n\n\nNota: O átomo se encontra no estado fundamental\n\n\n\n         Digite o comprimento de onda do fóton:\n\n"
        size_hint: 0.6, 0.2
        pos_hint: {"x":0.2, "y":0.79}

    TextInput:
        id: n
        multiline: False
        hint_text: "Entre (λ)" ####
        size_hint: 0.3,0.07
        pos_hint: {"x":0.35, "y":0.67}

    Spinner:
        id: spinner_id

        text: "m"

        values: ["m", "μm", "nm", "km"]

        size_hint: None, None
        size: 50, 50
        pos_hint:{'x':0.7, 'y': 0.66}

    Button:
        text: "Confirmar"
        pos_hint: {"x":0.35, "y":0.52}
        size_hint: 0.3,0.1
        on_release:
            info = analisePhoton(n.text, spinner_id.text)
            root.show_answer(info[0], info[1])
            n.text = ""

    Button:
        text: "Menu Inicial"
        pos_hint: {"center_x": 0.5, "y":0.0}
        size_hint: 0.3,0.1
        on_release:
            app.root.current = "main"
            root.manager.transition.direction = "down"